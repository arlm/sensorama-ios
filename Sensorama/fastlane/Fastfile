# vim: ai ts=2 sts=2 et sw=2 ft=ruby
fastlane_version "1.52.0"

default_platform :ios

def build_app
  gym(
    workspace: "Sensorama.xcworkspace",
    scheme: "Sensorama"
  )
end

platform :ios do
  before_all do
    cocoapods
  end

  desc "Installs FixCode which disables the \"Fix Issue\" button in Xcode"
  lane :xcode do
    install_xcode_plugin(
      url: "https://github.com/fastlane/FixCode/releases/download/0.2.0/FixCode.xcplugin.zip"
    )
  end

  desc "Fetches the provisioning profiles so you can build locally and deploy to your device"
  lane :certs do
    slack(message: "certs", success: true)
    match(
      app_identifier: "com.koszek.Sensorama",
      type: "development",
      git_url: ENV['FASTLANE_GIT_URL']
    )
  end

  lane :appmake do
    slack(message: "appmake", success: true)
    produce(
       username: 'wkoszek@freebsd.org',
       app_identifier: 'com.koszek.Sensorama',
       app_name: 'Sensorama',
       language: 'English',
       app_version: '1.0',
       skip_itc: true,
     )
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    certs
    sigh
    build_app
    deliver
    frameit
  end

  desc "Deploy a new version to the App Store"
  lane :appstore do
    # match(type: "appstore")
    # snapshot
    gym(scheme: "Sensorama") # Build your app - more options available
    deliver(force: true)
  end

  after_all do |lane|
    print "after lane #{lane}"
  end

  error do |lane, exception|
    print "Error happened!"
  end
end
